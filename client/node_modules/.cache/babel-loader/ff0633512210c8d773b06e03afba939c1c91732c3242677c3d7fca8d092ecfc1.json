{"ast":null,"code":"/** 이메일 유효성검사 */export const emailVaildation=e=>{const email=e.target.value;// setEmail(currentEmail);\nconst emailRegExp=/^[A-Za-z0-9_]+[A-Za-z0-9]*[@]{1}[A-Za-z0-9]+[A-Za-z0-9]*[.]{1}[A-Za-z]{1,3}$/;if(!emailRegExp.test(email)){const emailMessage=\"이메일의 형식이 올바르지 않습니다!\";return{emailMessage,bool:false};}else{const emailMessage=\"사용 가능한 이메일 입니다.\";return{emailMessage,bool:true};}};/** 이름유효성검사 */export const nameVaildation=e=>{const name=e.target.value;// setName(currentName);\nif(name.length<2||name.length>10){const nameMessage=\"닉네임은 2글자 이상 10글자 이하로 입력해주세요!\";return{nameMessage,bool:false};}else{const nameMessage=\"사용가능한 닉네임 입니다.\";return{nameMessage,bool:true};}};/** 비밀번호 유효성검사 */export const pwdVaildation=e=>{const pwd=e.target.value;const passwordRegExp=/^(?=.*[a-zA-Z])(?=.*[!@#$&%^*+=-])(?=.*[0-9]).{8,25}$/;if(!passwordRegExp.test(pwd)){const pwdMessage=\"숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요!\";return{pwdMessage,bool:false};}else{const pwdMessage=\"안전한 비밀번호 입니다.\";return{pwdMessage,bool:true};}};/** 비밀번호 확인 유효성검사 */export const pwdConfirmVaildation=_ref=>{let{e,pwd}=_ref;const pwdConfirm=e.target.value;// setPasswordConfirm(currentPasswordConfirm);\nif(pwd!==pwdConfirm){const pwdConfirmMessage=\"비밀번호가 똑같지 않아요!\";return{pwdConfirmMessage,bool:false};}else{const pwdConfirmMessage=\"똑같은 비밀번호를 입력했습니다.\";return{pwdConfirmMessage,bool:true};}};/** 전화번호 유효성검사 */export const phoneVaildation=e=>{const phone=e.target.value;// setPhone(currentPhone);\nconst phoneRegExp=/^01([0|1|6|7|8|9])?([0-9]{3,4})?([0-9]{4})$/;if(!phoneRegExp.test(phone)){const phoneMessage=\"올바른 형식이 아닙니다!\";return{phoneMessage,bool:false};}else{const phoneMessage=\"사용 가능한 번호입니다:-)\";return{phoneMessage,bool:true};}};","map":{"version":3,"names":["emailVaildation","e","email","target","value","emailRegExp","test","emailMessage","bool","nameVaildation","name","length","nameMessage","pwdVaildation","pwd","passwordRegExp","pwdMessage","pwdConfirmVaildation","_ref","pwdConfirm","pwdConfirmMessage","phoneVaildation","phone","phoneRegExp","phoneMessage"],"sources":["C:/Users/user/Desktop/Library-ec2/client/src/utils/formVaildation.js"],"sourcesContent":["/** 이메일 유효성검사 */\r\nexport const emailVaildation = (e) => {\r\n  const email = e.target.value;\r\n  // setEmail(currentEmail);\r\n  const emailRegExp = /^[A-Za-z0-9_]+[A-Za-z0-9]*[@]{1}[A-Za-z0-9]+[A-Za-z0-9]*[.]{1}[A-Za-z]{1,3}$/;\r\n  if (!emailRegExp.test(email)) {\r\n    const emailMessage = \"이메일의 형식이 올바르지 않습니다!\";\r\n    return {emailMessage, bool: false}\r\n  } else {\r\n    const emailMessage = \"사용 가능한 이메일 입니다.\";\r\n    return {emailMessage, bool: true}\r\n  }\r\n};\r\n\r\n/** 이름유효성검사 */\r\nexport const nameVaildation = (e) => {\r\n  const name = e.target.value;\r\n  // setName(currentName);\r\n  if (name.length < 2 || name.length > 10) {\r\n    const nameMessage = \"닉네임은 2글자 이상 10글자 이하로 입력해주세요!\";\r\n    return {nameMessage, bool: false}\r\n  } else {\r\n    const nameMessage = \"사용가능한 닉네임 입니다.\";\r\n    return {nameMessage, bool: true}\r\n  }\r\n};\r\n\r\n/** 비밀번호 유효성검사 */\r\nexport const pwdVaildation = (e) => {\r\n  const pwd = e.target.value;\r\n  const passwordRegExp = /^(?=.*[a-zA-Z])(?=.*[!@#$&%^*+=-])(?=.*[0-9]).{8,25}$/;\r\n  if (!passwordRegExp.test(pwd)) {\r\n    const pwdMessage = \"숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요!\";\r\n    return {pwdMessage, bool: false};\r\n  } else {\r\n    const pwdMessage = \"안전한 비밀번호 입니다.\";\r\n    return {pwdMessage, bool: true};\r\n  }\r\n};\r\n\r\n/** 비밀번호 확인 유효성검사 */\r\nexport const pwdConfirmVaildation = ({e, pwd}) => {\r\n\tconst pwdConfirm = e.target.value;\r\n\t// setPasswordConfirm(currentPasswordConfirm);\r\n\tif (pwd !== pwdConfirm) {\r\n\t\tconst pwdConfirmMessage = \"비밀번호가 똑같지 않아요!\";\r\n\t\treturn {pwdConfirmMessage, bool: false}\r\n\t} else {\r\n\t\tconst pwdConfirmMessage = \"똑같은 비밀번호를 입력했습니다.\";\r\n\t\treturn {pwdConfirmMessage, bool: true}\r\n\t}\r\n};\r\n\r\n/** 전화번호 유효성검사 */\r\nexport const phoneVaildation = (e) => {\r\n  const phone = e.target.value;\r\n  // setPhone(currentPhone);\r\n  const phoneRegExp = /^01([0|1|6|7|8|9])?([0-9]{3,4})?([0-9]{4})$/;\r\n\r\n  if (!phoneRegExp.test(phone)) {\r\n    const phoneMessage= \"올바른 형식이 아닙니다!\";\r\n    return {phoneMessage, bool: false}\r\n  } else {\r\n    const phoneMessage = \"사용 가능한 번호입니다:-)\";\r\n    return {phoneMessage, bool: true}\r\n  }\r\n};"],"mappings":"AAAA,gBACA,MAAO,MAAM,CAAAA,eAAe,CAAIC,CAAC,EAAK,CACpC,KAAM,CAAAC,KAAK,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAC5B;AACA,KAAM,CAAAC,WAAW,CAAG,8EAA8E,CAClG,GAAI,CAACA,WAAW,CAACC,IAAI,CAACJ,KAAK,CAAC,CAAE,CAC5B,KAAM,CAAAK,YAAY,CAAG,qBAAqB,CAC1C,MAAO,CAACA,YAAY,CAAEC,IAAI,CAAE,KAAK,CAAC,CACpC,CAAC,IAAM,CACL,KAAM,CAAAD,YAAY,CAAG,iBAAiB,CACtC,MAAO,CAACA,YAAY,CAAEC,IAAI,CAAE,IAAI,CAAC,CACnC,CACF,CAAC,CAED,cACA,MAAO,MAAM,CAAAC,cAAc,CAAIR,CAAC,EAAK,CACnC,KAAM,CAAAS,IAAI,CAAGT,CAAC,CAACE,MAAM,CAACC,KAAK,CAC3B;AACA,GAAIM,IAAI,CAACC,MAAM,CAAG,CAAC,EAAID,IAAI,CAACC,MAAM,CAAG,EAAE,CAAE,CACvC,KAAM,CAAAC,WAAW,CAAG,8BAA8B,CAClD,MAAO,CAACA,WAAW,CAAEJ,IAAI,CAAE,KAAK,CAAC,CACnC,CAAC,IAAM,CACL,KAAM,CAAAI,WAAW,CAAG,gBAAgB,CACpC,MAAO,CAACA,WAAW,CAAEJ,IAAI,CAAE,IAAI,CAAC,CAClC,CACF,CAAC,CAED,iBACA,MAAO,MAAM,CAAAK,aAAa,CAAIZ,CAAC,EAAK,CAClC,KAAM,CAAAa,GAAG,CAAGb,CAAC,CAACE,MAAM,CAACC,KAAK,CAC1B,KAAM,CAAAW,cAAc,CAAG,uDAAuD,CAC9E,GAAI,CAACA,cAAc,CAACT,IAAI,CAACQ,GAAG,CAAC,CAAE,CAC7B,KAAM,CAAAE,UAAU,CAAG,iCAAiC,CACpD,MAAO,CAACA,UAAU,CAAER,IAAI,CAAE,KAAK,CAAC,CAClC,CAAC,IAAM,CACL,KAAM,CAAAQ,UAAU,CAAG,eAAe,CAClC,MAAO,CAACA,UAAU,CAAER,IAAI,CAAE,IAAI,CAAC,CACjC,CACF,CAAC,CAED,oBACA,MAAO,MAAM,CAAAS,oBAAoB,CAAGC,IAAA,EAAc,IAAb,CAACjB,CAAC,CAAEa,GAAG,CAAC,CAAAI,IAAA,CAC5C,KAAM,CAAAC,UAAU,CAAGlB,CAAC,CAACE,MAAM,CAACC,KAAK,CACjC;AACA,GAAIU,GAAG,GAAKK,UAAU,CAAE,CACvB,KAAM,CAAAC,iBAAiB,CAAG,gBAAgB,CAC1C,MAAO,CAACA,iBAAiB,CAAEZ,IAAI,CAAE,KAAK,CAAC,CACxC,CAAC,IAAM,CACN,KAAM,CAAAY,iBAAiB,CAAG,mBAAmB,CAC7C,MAAO,CAACA,iBAAiB,CAAEZ,IAAI,CAAE,IAAI,CAAC,CACvC,CACD,CAAC,CAED,iBACA,MAAO,MAAM,CAAAa,eAAe,CAAIpB,CAAC,EAAK,CACpC,KAAM,CAAAqB,KAAK,CAAGrB,CAAC,CAACE,MAAM,CAACC,KAAK,CAC5B;AACA,KAAM,CAAAmB,WAAW,CAAG,6CAA6C,CAEjE,GAAI,CAACA,WAAW,CAACjB,IAAI,CAACgB,KAAK,CAAC,CAAE,CAC5B,KAAM,CAAAE,YAAY,CAAE,eAAe,CACnC,MAAO,CAACA,YAAY,CAAEhB,IAAI,CAAE,KAAK,CAAC,CACpC,CAAC,IAAM,CACL,KAAM,CAAAgB,YAAY,CAAG,iBAAiB,CACtC,MAAO,CAACA,YAAY,CAAEhB,IAAI,CAAE,IAAI,CAAC,CACnC,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}