{"ast":null,"code":"import{GoogleLogin}from\"@react-oauth/google\";import{GoogleOAuthProvider}from\"@react-oauth/google\";import axios from\"axios\";import{API_URL}from\"../../../config/contansts\";import{useNavigate}from\"react-router-dom\";import{useRecoilState}from\"recoil\";import{loginState}from\"../../../recoil/atoms/State\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const GoogleLoginButton=()=>{const navigate=useNavigate();const clientId=process.env.REACT_APP_GOOGLE_CLIENT_ID;const[islogin,setIslogin]=useRecoilState(loginState);//useState와 거의 비슷한 사용법\nconst decodeToken=async token=>{console.log(\"decodeToken(): \",token);const res=await axios.post(\"\".concat(API_URL,\"/api/google\"),{token});console.log(res.data);googleLogin(res.data);};const googleLogin=async decodeToken=>{console.log(\"googleLogin(): \",decodeToken);const res=await axios.post(\"\".concat(API_URL,\"/api/user/google-login\"),{decodeToken});console.log(res.data);if(res.status==200){console.log('로그인성공!');// alert(\"로그인성공!\");\nsetIslogin(true);// 로컬스토리지에 저장. 브라우저닫아도 유지\nnavigate('/');}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(GoogleOAuthProvider,{clientId:clientId,children:/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:res=>{decodeToken(res.credential);},onFailure:err=>{console.log(err);}})})});};export default GoogleLoginButton;","map":{"version":3,"names":["GoogleLogin","GoogleOAuthProvider","axios","API_URL","useNavigate","useRecoilState","loginState","jsx","_jsx","Fragment","_Fragment","GoogleLoginButton","navigate","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","islogin","setIslogin","decodeToken","token","console","log","res","post","concat","data","googleLogin","status","children","onSuccess","credential","onFailure","err"],"sources":["C:/Users/user/Desktop/Library-ec2/client/src/components/SocialLoginButtons/GoogleLoginButton/GoogleLoginButton.js"],"sourcesContent":["\r\nimport {GoogleLogin} from \"@react-oauth/google\";\r\nimport {GoogleOAuthProvider} from \"@react-oauth/google\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../../config/contansts\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginState } from \"../../../recoil/atoms/State\";\r\n\r\nconst GoogleLoginButton = () => {   \r\n\tconst navigate = useNavigate();\r\n\tconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\tconst [islogin, setIslogin] = useRecoilState(loginState); //useState와 거의 비슷한 사용법\r\n\r\n\tconst decodeToken = async (token) => {\r\n\t\tconsole.log(\"decodeToken(): \", token);\r\n\t\tconst res = await axios.post(`${API_URL}/api/google`, {token});\r\n\t\tconsole.log(res.data);\r\n\t\tgoogleLogin(res.data);\r\n\t}\r\n\r\n\tconst googleLogin = async (decodeToken) => {\r\n\t\tconsole.log(\"googleLogin(): \", decodeToken);\r\n\t\tconst res = await axios.post(`${API_URL}/api/user/google-login`, {decodeToken});\r\n\t\tconsole.log(res.data);\r\n\r\n\t\tif(res.status == 200){\r\n\t\t\tconsole.log('로그인성공!');\r\n\t\t\t// alert(\"로그인성공!\");\r\n\t\t\tsetIslogin(true);// 로컬스토리지에 저장. 브라우저닫아도 유지\r\n\t\t\tnavigate('/'); \r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GoogleOAuthProvider clientId={clientId}>\r\n\t\t\t\t<GoogleLogin\r\n\t\t\t\t\tonSuccess={(res) => {\r\n\t\t\t\t\t\tdecodeToken(res.credential);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFailure={(err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</GoogleOAuthProvider>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GoogleLoginButton"],"mappings":"AACA,OAAQA,WAAW,KAAO,qBAAqB,CAC/C,OAAQC,mBAAmB,KAAO,qBAAqB,CACvD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,2BAA2B,CACnD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,cAAc,KAAQ,QAAQ,CACvC,OAASC,UAAU,KAAQ,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEzD,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAS,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B,CACvD,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGb,cAAc,CAACC,UAAU,CAAC,CAAE;AAE1D,KAAM,CAAAa,WAAW,CAAG,KAAO,CAAAC,KAAK,EAAK,CACpCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEF,KAAK,CAAC,CACrC,KAAM,CAAAG,GAAG,CAAG,KAAM,CAAArB,KAAK,CAACsB,IAAI,IAAAC,MAAA,CAAItB,OAAO,gBAAe,CAACiB,KAAK,CAAC,CAAC,CAC9DC,OAAO,CAACC,GAAG,CAACC,GAAG,CAACG,IAAI,CAAC,CACrBC,WAAW,CAACJ,GAAG,CAACG,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAR,WAAW,EAAK,CAC1CE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEH,WAAW,CAAC,CAC3C,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAArB,KAAK,CAACsB,IAAI,IAAAC,MAAA,CAAItB,OAAO,2BAA0B,CAACgB,WAAW,CAAC,CAAC,CAC/EE,OAAO,CAACC,GAAG,CAACC,GAAG,CAACG,IAAI,CAAC,CAErB,GAAGH,GAAG,CAACK,MAAM,EAAI,GAAG,CAAC,CACpBP,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACrB;AACAJ,UAAU,CAAC,IAAI,CAAC,CAAC;AACjBN,QAAQ,CAAC,GAAG,CAAC,CACd,CACD,CAAC,CAED,mBACCJ,IAAA,CAAAE,SAAA,EAAAmB,QAAA,cACCrB,IAAA,CAACP,mBAAmB,EAACY,QAAQ,CAAEA,QAAS,CAAAgB,QAAA,cACvCrB,IAAA,CAACR,WAAW,EACX8B,SAAS,CAAGP,GAAG,EAAK,CACnBJ,WAAW,CAACI,GAAG,CAACQ,UAAU,CAAC,CAC5B,CAAE,CACFC,SAAS,CAAGC,GAAG,EAAK,CACnBZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC,CACjB,CAAE,CACF,CAAC,CACkB,CAAC,CACrB,CAAC,CAEL,CAAC,CAED,cAAe,CAAAtB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}