{"ast":null,"code":"import axios from\"axios\";import KakaoLogin from\"react-kakao-login\";import{API_URL}from\"../../../config/contansts\";import{useNavigate}from\"react-router-dom\";import{useRecoilState}from\"recoil\";import{loginState}from\"../../../recoil/atoms/State\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const KakaoLoginButton=()=>{const navigate=useNavigate();const kakaoClientId=process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;const[islogin,setIslogin]=useRecoilState(loginState);//useState와 거의 비슷한 사용법\nconst kakaoOnSuccess=async data=>{// console.log(data)\nconst access_token=data.response.access_token;// 엑세스 토큰 백엔드로 전달\nconst res=await axios.post(\"\".concat(API_URL,\"/api/kakao\"),{access_token});kakaoLogin(res.data);};const kakaoLogin=async userData=>{console.log(\"kakaoLogin(): \",userData);const res=await axios.post(\"\".concat(API_URL,\"/api/user/kakao-login\"),{userData});console.log(res.data);if(res.status==200){console.log('로그인성공!');// alert(\"로그인성공!\");\nsetIslogin(true);// 로컬스토리지에 저장. 브라우저닫아도 유지\nnavigate('/');}};const kakaoOnFailure=error=>{console.log(error);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(KakaoLogin,{token:kakaoClientId,onSuccess:kakaoOnSuccess,onFail:kakaoOnFailure,render:_ref=>{let{onClick}=_ref;return/*#__PURE__*/_jsx(\"div\",{onClick:e=>{e.preventDefault();onClick();},children:/*#__PURE__*/_jsx(\"img\",{src:API_URL+\"/images/KakaoLogin_icon/kakao_login_medium_narrow.png\",alt:\"\\uCE74\\uCE74\\uC624\\uB85C\\uADF8\\uC778\"})});}})});};export default KakaoLoginButton;","map":{"version":3,"names":["axios","KakaoLogin","API_URL","useNavigate","useRecoilState","loginState","jsx","_jsx","Fragment","_Fragment","KakaoLoginButton","navigate","kakaoClientId","process","env","REACT_APP_KAKAO_JAVASCRIPT_KEY","islogin","setIslogin","kakaoOnSuccess","data","access_token","response","res","post","concat","kakaoLogin","userData","console","log","status","kakaoOnFailure","error","children","token","onSuccess","onFail","render","_ref","onClick","e","preventDefault","src","alt"],"sources":["C:/Users/user/Desktop/Library-ec2/client/src/components/SocialLoginButtons/KakaoLoginButton/KakaoLoginButton.js"],"sourcesContent":["import axios from \"axios\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\nimport { API_URL } from \"../../../config/contansts\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginState } from \"../../../recoil/atoms/State\";\r\n\r\nconst KakaoLoginButton =()=>{\r\n  const navigate = useNavigate();\r\n  const kakaoClientId = process.env.REACT_APP_KAKAO_JAVASCRIPT_KEY;\r\n  const [islogin, setIslogin] = useRecoilState(loginState); //useState와 거의 비슷한 사용법\r\n\r\n  const kakaoOnSuccess = async (data)=>{\r\n    // console.log(data)\r\n    const access_token = data.response.access_token;  // 엑세스 토큰 백엔드로 전달\r\n\r\n    const res = await axios.post(`${API_URL}/api/kakao`, {access_token});\r\n    kakaoLogin(res.data);\r\n  }\r\n\r\n  const kakaoLogin = async (userData) => {\r\n\t\tconsole.log(\"kakaoLogin(): \", userData);\r\n\t\tconst res = await axios.post(`${API_URL}/api/user/kakao-login`, {userData});\r\n\t\tconsole.log(res.data);\r\n\r\n\t\tif(res.status == 200){\r\n\t\t\tconsole.log('로그인성공!');\r\n\t\t\t// alert(\"로그인성공!\");\r\n\t\t\tsetIslogin(true);// 로컬스토리지에 저장. 브라우저닫아도 유지\r\n\t\t\tnavigate('/'); \r\n\t\t}\r\n\t}\r\n\r\n  const kakaoOnFailure = (error) => {\r\n    console.log(error);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <KakaoLogin\r\n        token={kakaoClientId}\r\n        onSuccess={kakaoOnSuccess}\r\n        onFail={kakaoOnFailure}\r\n        render={({ onClick }) => (\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onClick();\r\n            }}\r\n          >\r\n            <img src={API_URL+\"/images/KakaoLogin_icon/kakao_login_medium_narrow.png\"} alt=\"카카오로그인\" />\r\n          </div>\r\n        )}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default KakaoLoginButton;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,OAASC,OAAO,KAAQ,2BAA2B,CACnD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,cAAc,KAAQ,QAAQ,CACvC,OAASC,UAAU,KAAQ,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEzD,KAAM,CAAAC,gBAAgB,CAAEA,CAAA,GAAI,CAC1B,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAS,aAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,8BAA8B,CAChE,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGb,cAAc,CAACC,UAAU,CAAC,CAAE;AAE1D,KAAM,CAAAa,cAAc,CAAG,KAAO,CAAAC,IAAI,EAAG,CACnC;AACA,KAAM,CAAAC,YAAY,CAAGD,IAAI,CAACE,QAAQ,CAACD,YAAY,CAAG;AAElD,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAAtB,KAAK,CAACuB,IAAI,IAAAC,MAAA,CAAItB,OAAO,eAAc,CAACkB,YAAY,CAAC,CAAC,CACpEK,UAAU,CAACH,GAAG,CAACH,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAM,UAAU,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACvCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEF,QAAQ,CAAC,CACvC,KAAM,CAAAJ,GAAG,CAAG,KAAM,CAAAtB,KAAK,CAACuB,IAAI,IAAAC,MAAA,CAAItB,OAAO,0BAAyB,CAACwB,QAAQ,CAAC,CAAC,CAC3EC,OAAO,CAACC,GAAG,CAACN,GAAG,CAACH,IAAI,CAAC,CAErB,GAAGG,GAAG,CAACO,MAAM,EAAI,GAAG,CAAC,CACpBF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACrB;AACAX,UAAU,CAAC,IAAI,CAAC,CAAC;AACjBN,QAAQ,CAAC,GAAG,CAAC,CACd,CACD,CAAC,CAEA,KAAM,CAAAmB,cAAc,CAAIC,KAAK,EAAK,CAChCJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CACpB,CAAC,CAED,mBACExB,IAAA,CAAAE,SAAA,EAAAuB,QAAA,cACEzB,IAAA,CAACN,UAAU,EACTgC,KAAK,CAAErB,aAAc,CACrBsB,SAAS,CAAEhB,cAAe,CAC1BiB,MAAM,CAAEL,cAAe,CACvBM,MAAM,CAAEC,IAAA,MAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,oBAClB9B,IAAA,QACE+B,OAAO,CAAGC,CAAC,EAAK,CACdA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBF,OAAO,CAAC,CAAC,CACX,CAAE,CAAAN,QAAA,cAEFzB,IAAA,QAAKkC,GAAG,CAAEvC,OAAO,CAAC,uDAAwD,CAACwC,GAAG,CAAC,sCAAQ,CAAE,CAAC,CACvF,CAAC,EACN,CACH,CAAC,CACF,CAAC,CAEP,CAAC,CAED,cAAe,CAAAhC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}